//
try {
    console.log(naoExiste);
} catch (erro) {//catch guarda o erro e na variavel erro e manda oque quisermos
    console.log("erro burro");
}




///////////
function soma(x, y) {
    if (typeof x !== 'number' || typeof y !== 'number') {
        throw new ReferenceError('x e y Precisão ser numeros')
    }
    return x + y;
}

try {
    console.log(soma(1, 2));
    console.log(soma('1', 2));
} catch (error) {//qualquer nome para armazenar o erro
    // console.log(error);
    console.log('Alguma coisa mais amigavel')
}


try {
    // É executa quando não há erros
} catch (e) {
    // É executada quando há erros
} finally {
    // Sempre
}

console.log('###################################')
try {
    console.log(a);
    console.log('Abri um arquivo');
    console.log('Manipulei o arquivo e gerou erro');
    console.log('Fechei o arquivo');
} catch (e) {
    console.log('Tratando o erro');
} finally {
    console.log('FINALLY: Eu sempre sou executado');
}

////////////////////////////////////////////////////////////
function retonaHora(data) {
    // instanceof = o atributo data e uma instancia do objeto construtor data
    if (data && !(data instanceof Date)) {
        throw new TypeError('Esperando instância de Date.');
    }
    if (!data) {
        data = new Date();
    }
    return data.toLocaleTimeString('pt-BR', {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hour12: false
    });

}

try {
    const data = new Date('01-01-1970 12:58:12');
    const hora = retonaHora();
    console.log(hora);
} catch (e) {
    // Tratar erro
    // console.log(e);
} finally {
    console.log('Tenha um bom dia.');
}